<?xml version="1.0" encoding="UTF-8"?>
<!-- ============================= -->
<!-- This file is create jar file. -->
<!-- @created by : Takefumi Ohta   -->
<!-- ============================= -->
<project name="build-Jar" default="build">
	<!--  -->
	<!-- directory path which jar file is created -->
	<property name="jardir" location="./release" />
	<!-- jar file name -->
	<property name="jarfile.name" value="testAgent2.jar" />
	<!-- contain source in jar or not -->
	<property name="contain.src" value="true" />
	<!-- directory of library -->
	<property name="lib.dir" value="./libs/" />
	<!-- main class path -->
	<property name="main.class" value="jp.ac.nagoyau.is.ss.kishii.ob.launch.LaunchSampleAgents" />

	<!-- source directory of program -->
	<property name="srcdir" location="./src" />
	<!-- binary directory of program -->
	<property name="classdir" location="./bin" />
	<!-- charm -->
	<property name="jarfile.path" location="${jardir}${file.separator}${jarfile.name}" />
	<condition property="lib.dir.path">
		<available file="${lib.dir}" />
	</condition>
	<!--	<property name="lib.dir.path" location="${lib.dir}" />-->

	<path id="libraries">
		<fileset dir="${lib.dir.path}" includes="**/*.jar" excludes="**/${jarfile.name}" />
	</path>
	<script language="javascript">
		<![CDATA[
			importClass(java.io.File);
			function readPath(file,res,dirsep){
				var files = file.listFiles();
				var i;
				for(i=0;i<files.length;i++){
					if(files[i].isFile()){
						var path = files[i].getPath();
						var point = path.lastIndexOf(".");
						if(point > 0 && path.substring(point + 1).equals("jar")){
							path=path.replace(dirsep,"/");
							res.push(path);
							print("added classpath : "+path);
						}
					}else if(files[i].isDirectory()){
						readPath(files[i],res,dirsep);
					}
				}
				return res;
			}
		
			var sep = project.getProperty("file.separator");
			if(project.getProperty("lib.dir.path")){
				var file = new File(project.getProperty("lib.dir"));
				if(file.exists()){
					print("lib directory : "+file.getName());
					var pathes = new Array();
					readPath(file,pathes,sep);
					print(pathes);
					var i;
					var classpath=". ";
					for(i=0;i<pathes.length;i++){
						classpath += pathes[i]+" ";
					}
					print("result : "+classpath);
					project.setNewProperty("classpath",classpath);
				}else{
					print(file.getName()+" is not found");
					project.setNewProperty("classpath",".");
				}
			}else{
				print("no lib");
				project.setNewProperty("classpath",".");
			}
		]]>
		</script>
		<condition property="contain">
			<istrue value="${contain.src}" />
		</condition>
		<condition property="contain.src" value="false">
			<not>
				<istrue value="${contain.src}" />
			</not>
		</condition>

		<description>
		[setting of build-jar]:::
			[jar file will be created at] : ${jardir}${file.separator}
			[jar file name] : ${jarfile.name}
			[final file path] : ${jarfile.path}
		
		[directory path]:::
			[source] : ${srcdir}
			[binary] : ${classdir}
			[library] : ${lib.dir.path}
		
		[classpath to library]:::
			${classpath}
		
		[contain source?] : ${contain.src}
	</description>

		<target name="default" depends="compile" description="create jar file" unless="contain">
			<mkdir dir="${jardir}" />
			<jar destfile="${jarfile.path}">
				<fileset dir="${classdir}" id="class">
					<include name="**/*.class" />
				</fileset>
				<manifest>
					<attribute name="Main-Class" value="test.launcher.TestLauncher" />
					<attribute name="Class-Path" value="${classpath}" />
				</manifest>
			</jar>
		</target>

		<target name="contain-source" depends="compile" description="create jar file which containing source file" if="contain">
			<mkdir dir="${jardir}" />
			<jar destfile="${jarfile.path}">
				<fileset dir="${classdir}" id="class">
					<include name="**/*.class" />
				</fileset>
				<fileset dir="${srcdir}" id="source">
					<include name="**/*.java" />
				</fileset>
				<manifest>
					<attribute name="Main-Class" value="${main.class}" />
					<attribute name="Class-Path" value="${classpath}" />
				</manifest>
			</jar>
		</target>

		<target name="build" depends="default,contain-source">
		</target>

		<target name="compile">
			<javac srcdir="${srcdir}" destdir="${classdir}" encoding="UTF-8" />
		</target>
	</project>